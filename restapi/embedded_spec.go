// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "Petition manager",
    "title": "Petition manager",
    "version": "1.0.0"
  },
  "host": "localhost:8080",
  "paths": {
    "/petitions": {
      "get": {
        "tags": [
          "petitions"
        ],
        "summary": "Get all petitions",
        "operationId": "petitionsGet",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/petition"
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "petitions"
        ],
        "summary": "Create a new petition",
        "operationId": "petitionsPost",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/petition"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/petition"
            }
          }
        }
      }
    },
    "/petitions/{petitionId}": {
      "get": {
        "tags": [
          "petitions"
        ],
        "summary": "Get a petition",
        "operationId": "petitionsGetById",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/petition"
            }
          }
        }
      },
      "put": {
        "tags": [
          "petitions"
        ],
        "summary": "Update a petition",
        "operationId": "petitionsUpdate",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/petition"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/petition"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "petitions"
        ],
        "summary": "Remove a petition",
        "operationId": "petitionsDelete",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/petition"
            }
          }
        }
      },
      "parameters": [
        {
          "type": "integer",
          "name": "petitionId",
          "in": "path",
          "required": true
        }
      ]
    }
  },
  "definitions": {
    "petition": {
      "type": "object",
      "properties": {
        "author_email": {
          "description": "Email address of the author of the petition",
          "type": "string",
          "example": "silent_man@email.com"
        },
        "body": {
          "description": "Body of the petition",
          "type": "string",
          "example": "My neighbors are very loud"
        },
        "id": {
          "type": "integer",
          "readOnly": true
        },
        "name": {
          "description": "Name of the petition",
          "type": "string",
          "example": "Loud neighbors"
        }
      }
    },
    "principal": {
      "type": "string"
    }
  },
  "securityDefinitions": {
    "PathToken": {
      "type": "apiKey",
      "name": "token",
      "in": "query"
    }
  },
  "security": [
    {
      "PathToken": []
    }
  ],
  "tags": [
    {
      "name": "petitions"
    }
  ]
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "Petition manager",
    "title": "Petition manager",
    "version": "1.0.0"
  },
  "host": "localhost:8080",
  "paths": {
    "/petitions": {
      "get": {
        "tags": [
          "petitions"
        ],
        "summary": "Get all petitions",
        "operationId": "petitionsGet",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/petition"
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "petitions"
        ],
        "summary": "Create a new petition",
        "operationId": "petitionsPost",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/petition"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/petition"
            }
          }
        }
      }
    },
    "/petitions/{petitionId}": {
      "get": {
        "tags": [
          "petitions"
        ],
        "summary": "Get a petition",
        "operationId": "petitionsGetById",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/petition"
            }
          }
        }
      },
      "put": {
        "tags": [
          "petitions"
        ],
        "summary": "Update a petition",
        "operationId": "petitionsUpdate",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/petition"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/petition"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "petitions"
        ],
        "summary": "Remove a petition",
        "operationId": "petitionsDelete",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/petition"
            }
          }
        }
      },
      "parameters": [
        {
          "type": "integer",
          "name": "petitionId",
          "in": "path",
          "required": true
        }
      ]
    }
  },
  "definitions": {
    "petition": {
      "type": "object",
      "properties": {
        "author_email": {
          "description": "Email address of the author of the petition",
          "type": "string",
          "example": "silent_man@email.com"
        },
        "body": {
          "description": "Body of the petition",
          "type": "string",
          "example": "My neighbors are very loud"
        },
        "id": {
          "type": "integer",
          "readOnly": true
        },
        "name": {
          "description": "Name of the petition",
          "type": "string",
          "example": "Loud neighbors"
        }
      }
    },
    "principal": {
      "type": "string"
    }
  },
  "securityDefinitions": {
    "PathToken": {
      "type": "apiKey",
      "name": "token",
      "in": "query"
    }
  },
  "security": [
    {
      "PathToken": []
    }
  ],
  "tags": [
    {
      "name": "petitions"
    }
  ]
}`))
}
